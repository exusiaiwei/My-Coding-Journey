
# 运算符和表达式

运算符是用于执行特定操作的符号或关键字。在Python中，有多种类型的运算符，包括算术运算符、比较运算符、逻辑运算符等。

操作数是运算符所操作的数据。

表达式是由运算符和操作数组成的组合，用于计算和生成值。在Python中，表达式可以是简单的算术表达式，也可以是复杂的逻辑表达式。

例如，一个表达式的示例是`2 + 3`,其中运算符为`+`,操作数为`2`，`3`。


## 运算符

1. 算术运算符：
    - 加法运算符（+）：用于将两个值相加。
    - 减法运算符（-）：用于将一个值减去另一个值。
    - 乘法运算符（*）：用于将两个值相乘。
    - 除法运算符（/）：用于将一个值除以另一个值。
    - 取模运算符（%）：用于计算两个值相除的余数。
    - 幂运算符（**）：用于计算一个值的指数。
    - 整除运算符（//）：用于计算两个值相除的整数部分。

```{python}
x = 2 + 3
print(x)

y = 3 - 2
print(y)

a = 5 * 6
print(a)

b = 50 / 25
print(b)

c = 26 % 3
print(c)

d= 2 ** 3
print(d)

e = 28 // 3
print(e)
```
2. 比较运算符：
    - 等于运算符（==）：用于检查两个值是否相等。
    - 不等于运算符（!=）：用于检查两个值是否不相等。
    - 大于运算符（>）：用于检查一个值是否大于另一个值。
    - 小于运算符（<）：用于检查一个值是否小于另一个值。
    - 大于等于运算符（>=）：用于检查一个值是否大于或等于另一个值。
    - 小于等于运算符（<=）：用于检查一个值是否小于或等于另一个值。

```{python}

a = 1 == 1
print(a)
b= 1 != 1
print(b)
```
3. 逻辑运算符：
    - 与运算符（and）：用于检查多个条件是否同时为真。
    - 或运算符（or）：用于检查多个条件是否至少有一个为真。
    - 非运算符（not）：用于对条件进行取反。

4. 位运算符：
    - 按位与运算符（&）：用于对两个值进行按位与操作。
    - 按位或运算符（|）：用于对两个值进行按位或操作。
    - 按位异或运算符（^）：用于对两个值进行按位异或操作。
    - 按位取反运算符（~）：用于对一个值进行按位取反操作。
    - 左移运算符（<<）：用于将一个值向左移动指定的位数。
    - 右移运算符（>>）：用于将一个值向右移动指定的位数。

5. 赋值运算符：
    - 简单赋值运算符（=）：用于将一个值赋给一个变量。
    - 加法赋值运算符（+=）：用于将一个值与一个变量相加，并将结果赋给该变量。
    - 减法赋值运算符（-=）：用于将一个值从一个变量中减去，并将结果赋给该变量。
    - 乘法赋值运算符（*=）：用于将一个值与一个变量相乘，并将结果赋给该变量。
    - 除法赋值运算符（/=）：用于将一个值除以一个变量，并将结果赋给该变量。
    - 取模赋值运算符（%=）：用于计算两个值相除的余数，并将结果赋给一个变量。
    - 幂赋值运算符（**=）：用于计算一个值的指数，并将结果赋给一个变量。
    - 整除赋值运算符（//=）：用于计算两个值相除的整数部分，并将结果赋给一个变量。

## 表达式


表达式是由运算符和操作数组成的组合，用于计算和生成值。

在Python中，表达式可以是简单的算术表达式，也可以是复杂的逻辑表达式。

例如，以下是一些常见的表达式示例：

- 算术表达式：2 + 3 * 4
- 逻辑表达式：(x > 5) and (y < 10)
- 字符串拼接表达式：'Hello' + 'World'
- 列表推导式：[x for x in range(10) if x % 2 == 0]

表达式的值可以根据操作数的类型和运算符的规则进行计算。在计算表达式时，Python会按照一定的优先级和结合性来确定运算的顺序。

